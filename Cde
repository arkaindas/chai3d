class WordGuessGame {
  constructor(words, maxAttempts = 5) {
    this.words = words;
    this.maxAttempts = maxAttempts;
    this.currentAttempts = maxAttempts;
    this.currentWord = '';
    this.currentClue = '';

    // Elements
    this.wordBox = document.getElementById('word-box');
    this.clueBox = document.getElementById('clue');
    this.revealBtn = document.getElementById('reveal');
    this.tryNewBtn = document.getElementById('try-new');
    this.attemptsBox = document.getElementById('attempts');

    // Bind
    this.bindEvents();
    this.loadNewWord();
  }

  bindEvents() {
    this.revealBtn.addEventListener('click', () => this.revealWord());
    this.tryNewBtn.addEventListener('click', () => this.loadNewWord());
  }

  loadNewWord() {
    this.wordBox.innerHTML = '';
    this.currentAttempts = this.maxAttempts;
    this.updateAttempts();

    const randomIndex = Math.floor(Math.random() * this.words.length);
    const selected = this.words[randomIndex];
    this.currentWord = selected.word.toUpperCase();
    this.currentClue = selected.clue;

    this.clueBox.textContent = this.currentClue;

    // Choose a random index for prefilled hint letter
    const hintIndex = Math.floor(Math.random() * this.currentWord.length);

    for (let i = 0; i < this.currentWord.length; i++) {
      const input = document.createElement('input');
      input.maxLength = 1;

      // Prefill one random letter as hint
      if (i === hintIndex) {
        input.value = this.currentWord[i];
        input.disabled = true;
        input.classList.add('correct');
      }

      // Move to next input on typing
      input.addEventListener('input', (e) => this.handleInput(e, i));

      this.wordBox.appendChild(input);
    }

    // Focus on first editable input
    const firstInput = this.wordBox.querySelector('input:not(:disabled)');
    if (firstInput) firstInput.focus();
  }

  handleInput(e, index) {
    const inputs = this.wordBox.querySelectorAll('input');
    const value = e.target.value.toUpperCase();

    e.target.value = value; // force uppercase

    if (value && index < inputs.length - 1) {
      // Move to next editable input
      let nextIndex = index + 1;
      while (nextIndex < inputs.length && inputs[nextIndex].disabled) {
        nextIndex++;
      }
      if (nextIndex < inputs.length) {
        inputs[nextIndex].focus();
      }
    }
  }

  revealWord() {
    if (this.currentAttempts <= 0) return;

    const inputs = this.wordBox.querySelectorAll('input');
    let guess = '';

    inputs.forEach((input, i) => {
      const val = input.value.toUpperCase();
      guess += val || '_';

      if (!input.disabled) {
        if (val === this.currentWord[i]) {
          input.classList.add('correct');
          input.classList.remove('wrong');
        } else {
          input.classList.add('wrong');
          input.classList.remove('correct');
        }
      }
    });

    if (guess === this.currentWord) {
      setTimeout(() => alert(`✅ Correct! The word is ${this.currentWord}`), 200);
    } else {
      this.currentAttempts--;
      this.updateAttempts();
      if (this.currentAttempts === 0) {
        setTimeout(() => alert(`❌ Out of attempts! The word was ${this.currentWord}`), 200);
      }
    }
  }

  updateAttempts() {
    this.attemptsBox.textContent = `Attempts Remaining: ${this.currentAttempts}`;
  }
}

// Initialize game
const wordData = [
  { word: 'TURBINE', clue: 'Machine used to generate electricity from wind or water' },
  { word: 'ENGINE', clue: 'Machine that converts fuel into motion' },
  { word: 'BATTERY', clue: 'Device that stores electrical energy' },
  { word: 'ROTOR', clue: 'Rotating part of a machine' },
  { word: 'GENERATOR', clue: 'Converts mechanical energy into electrical energy' }
];

const game = new WordGuessGame(wordData);
