// Calculate wrapped text lines first, then center vertically
const wrappedLines = this.getWrappedLines(ctx, segments[i], size * 0.4);
const totalTextHeight = wrappedLines.length * (size / 12);
const startY = -totalTextHeight / 2 + (size / 60); // small vertical adjust

for (let l = 0; l < wrappedLines.length; l++) {
  ctx.fillText(wrappedLines[l], size * 0.35, startY + l * (size / 12));
}


// ðŸŸ¢ Helper to calculate wrapped lines (used for vertical centering)
getWrappedLines(ctx, text, maxWidth) {
  const words = text.split(" ");
  const lines = [];
  let line = "";
  for (let n = 0; n < words.length; n++) {
    const testLine = line + words[n] + " ";
    const testWidth = ctx.measureText(testLine).width;
    if (testWidth > maxWidth && n > 0) {
      lines.push(line.trim());
      line = words[n] + " ";
    } else {
      line = testLine;
    }
  }
  lines.push(line.trim());
  return lines;
}
