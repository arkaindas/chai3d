<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Wheel Spin</title>
<style>
  body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background: radial-gradient(circle, #002b20, #001510);
  }

  .wheel-container {
    position: relative;
    width: 300px;
    height: 300px;
  }

  .outer-border {
    position: absolute;
    top: -15px;
    left: -15px;
    right: -15px;
    bottom: -15px;
    border-radius: 50%;
    border: 6px solid #00ff99;
    box-shadow: 0 0 20px #00ff99;
  }

  .inner-border {
    position: absolute;
    top: -7px;
    left: -7px;
    right: -7px;
    bottom: -7px;
    border-radius: 50%;
    border: 4px solid #001c13;
  }

  canvas {
    border-radius: 50%;
    width: 100%;
    height: 100%;
  }

  #spin {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    border: 2px solid #000;
    background: white;
    font-weight: bold;
    cursor: pointer;
    z-index: 10;
  }

  #arrow {
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 20px solid #000;
    z-index: 20;
  }
</style>
</head>
<body>
  <div class="wheel-container">
    <div id="arrow"></div>
    <div class="outer-border"></div>
    <div class="inner-border"></div>
    <canvas id="wheel" width="300" height="300"></canvas>
    <button id="spin">SPIN</button>
  </div>
  <p id="result" style="color:white;margin-top:20px;font-size:18px;"></p>

<script>
const wheel = document.getElementById("wheel");
const ctx = wheel.getContext("2d");
const spinBtn = document.getElementById("spin");
const result = document.getElementById("result");

const segments = [
  "Tip of the day",
  "Trivia Time",
  "Myth buster",
  "Test your IQ",
  "Learn Something New",
  "Community Hero"
];

const colors = ["#2ecc71", "#ffffff", "#2ecc71", "#ffffff", "#2ecc71", "#ffffff"];

let startAngle = 0;
const arc = (2 * Math.PI) / segments.length;
let spinTimeout = null;

function drawWheel() {
  for (let i = 0; i < segments.length; i++) {
    const angle = startAngle + i * arc;
    ctx.beginPath();
    ctx.fillStyle = colors[i];
    ctx.moveTo(150, 150);
    ctx.arc(150, 150, 150, angle, angle + arc, false);
    ctx.fill();
    ctx.save();

    // Text styling
    ctx.translate(150 + Math.cos(angle + arc / 2) * 100, 150 + Math.sin(angle + arc / 2) * 100);
    ctx.rotate(angle + arc / 2);
    ctx.textAlign = "left";
    ctx.fillStyle = "#000";
    ctx.font = "bold 14px sans-serif";
    wrapText(ctx, segments[i], -40, 0, 80, 16);
    ctx.restore();
  }
}

function wrapText(ctx, text, x, y, maxWidth, lineHeight) {
  const words = text.split(" ");
  let line = "";
  for (let n = 0; n < words.length; n++) {
    const testLine = line + words[n] + " ";
    const testWidth = ctx.measureText(testLine).width;
    if (testWidth > maxWidth && n > 0) {
      ctx.fillText(line, x, y);
      line = words[n] + " ";
      y += lineHeight;
    } else {
      line = testLine;
    }
  }
  ctx.fillText(line, x, y);
}

drawWheel();

let spinAngleStart = 0;
let spinTime = 0;
let spinTimeTotal = 0;

function rotateWheel() {
  spinTime += 20;
  if (spinTime >= spinTimeTotal) {
    stopRotateWheel();
    return;
  }
  const spinAngle = spinAngleStart - easeOut(spinTime, 0, spinAngleStart, spinTimeTotal);
  startAngle += (spinAngle * Math.PI) / 180;
  drawWheel();
  spinTimeout = requestAnimationFrame(rotateWheel);
}

function stopRotateWheel() {
  cancelAnimationFrame(spinTimeout);
  const degrees = (startAngle * 180) / Math.PI + 90;
  const arcd = (360 / segments.length);
  const index = Math.floor(((360 - (degrees % 360)) % 360) / arcd);
  result.innerText = `Result: ${segments[index]}`;
}

function easeOut(t, b, c, d) {
  const ts = (t /= d) * t;
  const tc = ts * t;
  return b + c * (tc + -3 * ts + 3 * t);
}

spinBtn.addEventListener("click", () => {
  spinAngleStart = Math.random() * 1000 + 2000;
  spinTime = 0;
  spinTimeTotal = Math.random() * 3000 + 4000;
  rotateWheel();
});
</script>
</body>
</html>
